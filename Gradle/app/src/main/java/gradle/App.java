/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradle;

public class App {
    public String getGreeting() {
        return "Hello World!";
}

public int sumar (int num1, int num2) {
    int suma = num1 + num2;
    System.out.println(suma);
    return suma;
}
public static void main(String[] args) {
    System.out.println("John");
}

public Integer length(String string) {

    throw new UnsupportedOperationException("Unimplemented method 'length'");
}
public class GestorArrays {
    
    public int contarElementos(){

    }
    public int devolverPrimero(){

    }
    public int devolverÚltimo(){

    }
    public int retornarTercero(){

    }
    public int sumaElementos(){

    }
    public int mediaElementos(){

    };
}

}


/*Desarrolla una clase GestorArrays que ofrezca diversas operaciones con arrays de enteros
, incluyendo contar elementos, devolver el primer, último, tercer elemento, calcular la suma
y la media de todos los elementos. Los estudiantes tendrán que implementar la clase y escribir
las pruebas unitarias correspondientes utilizando JUnit.

Descripción

La clase GestorArrays debe recibir un array de enteros como entrada en su constructor.
Implementar métodos por:
contarElements(): Devuelve el número de elementos del array.
devolverPrimer(): Devuelve el primer elemento del array.
devolverÚltimo(): Devuelve el último elemento del array.
retornarTercero(): Devuelve el tercer elemento del array, si existe.
sumaElements(): Devuelve la suma de todos los elementos del array.
mediaElements(): Calcula y devuelve la media de los elementos del array.
Para cada uno de estos métodos, se considerará el caso en que el array esté vacío. Se puede optar
por devolver un valor específico (como 0 o null) o lanzar una excepción, según lo que consideres más adecuado.

Pruebas Unitarias
Probar cada método con un array con múltiples elementos para verificar que devuelven los valores correctos.
Probar cada método con un array vacío para comprobar el correcto manejo de este caso.
Probar el método devolverTercer() con arrays de menos de tres elementos para asegurarse de que el comportamiento
es el correcto (como devolver null o lanzar una excepción).
Probar sumaElements() y mediaElements() con arrays que contengan tanto valores positivos como negativos para validar los cálculos.*/
